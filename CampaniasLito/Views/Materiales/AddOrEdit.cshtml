@model CampaniasLito.Models.ArticuloKFC
@{
}

@using (Html.BeginForm("AddOrEdit", "Materiales", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ArticuloKFCId)
    @Html.HiddenFor(model => model.Eliminado)
    @Html.HiddenFor(model => model.Imagen)

    <div class="row">
        <div class="input-field col s12" style="text-transform: uppercase !important">
            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @type = "text", @class = "validate", @required = "true", style = "text-transform: uppercase !important" } })
            <label class="active" for="Descripcion">Material</label>
        </div>
    </div>

    <div class="row" style="margin-top: -20px">
        <div class="col s6" style="text-transform: uppercase !important">
            <label for="FamiliaId" ">Familia</label>
            <div class="customselect">
                @Html.DropDownList("FamiliaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[3].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <span class="focus-border"></span>
        </div>
        <div class="col s4" style="text-transform: uppercase !important">
            <label for="ProveedorId">Proveedor</label>
            <div class="customselect">
                @Html.DropDownList("ProveedorId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[2].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <span class="focus-border"></span>
        </div>

        <div class="input-field col s2">
            @Html.EditorFor(model => model.CantidadDefault, new { htmlAttributes = new { @type = "text", @class = "validate center-align", @required = "true", style = "text-transform: uppercase !important; margin-top: -5px" } })
            <label class="active" for="CantidadDefault">Cantidad</label>
        </div>
    </div>

    @if (Model.ArticuloKFCId == 0)
    {
        <div class="row" style="margin-top: -20px">
            <div class="input-field col s12" style="text-transform: uppercase !important">
                @Html.TextAreaFor(model => model.Observaciones, new { @class = "materialize-textarea validate", style = "text-transform: uppercase !important" })
                <label class="active" for="Observaciones">Observaciones</label>
            </div>
        </div>
    }
    else
    {
        <div class="row" style="margin-top: -20px">
            <div class="input-field center-align col s4">
                @Html.CheckBoxFor(model => model.Activo, new { @class = "switch_1" })
                <label class="active" for="Activo">Activo</label>
            </div>

            <div class="input-field col s8" style="text-transform: uppercase !important">
                @Html.TextAreaFor(model => model.Observaciones, new { @class = "materialize-textarea validate", style = "text-transform: uppercase !important" })
                <label class="active" for="Observaciones">Observaciones</label>
            </div>

        </div>
    }

    <div class="row" style="margin-top: -20px">
        <div class="col s4" style="text-transform: uppercase !important">
            <label for="EquityFranquicia">Categoría</label>
            <div class="customselect">
                @Html.DropDownList("EquityFranquicia", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[5].Watermark, htmlAttributes: new { @class = "form-control form-control-select clgfocus", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <span class="focus-border"></span>
        </div>

        <div class="input-field col s8">
            @Html.EditorFor(model => model.LigaImagen, new { htmlAttributes = new { @type = "text", style = "text-transform: lowercase !important; margin-top: -5px" } })
            <label class="active" for="LigaImagen">Link de la Imagen</label>
        </div>
    </div>

    <div class="input-field col s12" style="text-transform: uppercase !important; margin-left: 10px">
        <div style="margin-top: -10px">
            <label for="ImagenFile" class="subir">
                <i class="fas fa-cloud-upload-alt"></i> Elegir Imagen...
            </label>
            &nbsp;&nbsp; @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file", accept = "image/*", style = "display: none;", onchange = "readURL(this);" })
        </div>
        <div class="center-align" style="margin-bottom: 5px">
            <div id="info"></div>
            <img id="blah" src="~/Content/images/Productos/@Model.Imagen" style="margin-top: 4px" height="220" alt="Imagen KFC" />
        </div>
    </div>

    <div class="center-align col s12">
        <button id="aceptar" type="submit" title="Aceptar" class="btn-floating btn-sm green" style="border-radius: 50%" onclick="hidePage()">
            <i class="large material-icons">check</i>
        </button>
    </div>
}

<script>

    var desc = document.getElementById('Descripcion');
    var fam = document.getElementById('FamiliaId');
    var prov = document.getElementById('ProveedorId');
    var cant = document.getElementById('CantidadDefault');
    var equ = document.getElementById('EquityFranquicia');
    var act = document.getElementById('Activo');
    var acep = document.getElementById('aceptar');

    $(document).ready(function () {
        acep.disabled = true;

        if (cant.value == "0") {
            cant.value = null;
        }
    });

    desc.addEventListener('change', function () {
        alcambiar();
    });

    fam.addEventListener('change', function () {
        alcambiar();
    });

    prov.addEventListener('change', function () {
        alcambiar();
    });

    cant.addEventListener('change', function () {
        alcambiar();
    });

    equ.addEventListener('change', function () {
        alcambiar();
    });

    act.addEventListener('change', function () {
        alcambiar();
    });

    function alcambiar() {

        if (desc.value != "" && fam.value != "" && prov.value != "" && cant.value != "0" && cant.value != "" && equ.value != "") {
            acep.disabled = false;
        }
        else {
            acep.disabled = true;
        }
    }

</script>