@model CampaniasLito.Models.ArticuloKFC

@{
    ViewBag.Title = "Agregar";
    Layout = null;
}

@using (Html.BeginForm("Create", "Materiales", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="panel">
        <div class="panel-heading">
            <table class="headingModal">
                <tr style="background-color: #DF2530 !important">
                    <td class="col-xs-6">
                        <h2 class="responsivoUsuarioLabelFa" style="color: #fff">@ViewBag.Title</h2>
                    </td>
                    <td class=" col-xs-12"></td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="button" class="botonF2 btn-danger" style="background-color: red" data-dismiss="modal"  onclick="viewPageSwal()">
                                <i class="fas fa-times-circle"></i>
                            </button>
                        </div>
                    </td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="submit" class="botonF1Modal btn-success" style="background-color: green" onclick="viewPage2()">
                                <i class="fas fa-check-circle"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <script src="~/Content/js/site.js"></script>

        <div class="panel-body">
            <div class="form-horizontal row responsivoUsuarioLabel">
                <div class="col-xs-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(m => m.EquityFranquicia)

                    <div class="row">
                        <div class="mat-input col-sm-12 focus">
                            <div class="mat-input-outer col-sm-12 focus" style="margin: 0 !important;">
                                @Html.TextBoxFor(model => model.Descripcion, new { htmlAttributes = new { @class = "active" }, @type = "text", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", autofocus = "autofocus", autocomplete = "off" })
                                <label class="active">Material</label>
                                <div class="border"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-6">
                            <label for="RegionId" style="font-size: 14px; color: #DF2530; padding: 0 5px;">Proveedor</label>
                            <div class="customselect">
                                @Html.DropDownList("ProveedorId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[2].Watermark, htmlAttributes: new { @class = "form-control  clgfocus inputModal", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                            </div>
                            <span class="focus-border"></span>
                        </div>

                        <div class="col-sm-6">
                            <label for="RegionId" style="font-size: 14px; color: #DF2530; padding: 0 5px;">Familia</label>
                            <div class="customselect">
                                @Html.DropDownList("FamiliaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[3].Watermark, htmlAttributes: new { @class = "form-control  clgfocus inputModal", @type = "text", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                            </div>
                            <span class="focus-border"></span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="mat-input col-sm-12 focus">
                            <div class="mat-input-outer col-sm-12 focus" style="margin: 0 !important;">
                                @Html.TextBoxFor(model => model.Observaciones, new { htmlAttributes = new { }, @type = "text", @style = "text-transform:uppercase", autofocus = "autofocus", autocomplete = "off" })
                                <label class="">Observaciones</label>
                                <div class="border"></div>
                            </div>
                        </div>
                    </div>

                    <div class="row" style="margin-top: 10px">
                        <div class="mat-input col-sm-3 focus">
                            <div class="mat-input-outer col-sm-12 focus" style="margin: 0 !important;">
                                @Html.TextBoxFor(model => model.CantidadDefault, new { htmlAttributes = new { }, @type = "text", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", autofocus = "autofocus", autocomplete = "off" })
                                <label class="">Cantidad</label>
                                <div class="border"></div>
                            </div>
                        </div>
                        <script src="~/Scripts/fileupload.js"></script>

                        <div class="form-group col-sm-9" style="width: 100%; margin-bottom: 60px">
                            @*@Html.LabelFor(model => model.ImagenFile, htmlAttributes: new { @class = "control-label col-sm-1" })*@
                            <div class="col-sm-7">
                                <div class="file-input-new">
                                    <div class="input-group loadFile">
                                        <div tabindex="500" class="form-control file-caption">
                                            <div class="file-caption-name" id="NombreArchivo">
                                                Imagen
                                            </div>
                                        </div>
                                        <div class="input-group-btn" style="height:auto">
                                            <div tabindex="500" class="btn btn-primary btn-file">
                                                <i class="glyphicon glyphicon-folder-open"> </i>
                                                @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file", id = "files", placeholder = "Imagen" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>




                    @*<div class="form-group">
            <div class="col-sm-12">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Descripción" } })
            </div>
        </div>*@

                    @*<div class="form-group">
            <div class="col-sm-8">
                @Html.DropDownList("ProveedorId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[3].Watermark, htmlAttributes: new { @class = "form-control inputModal", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <div class="col-sm-2">
                @Html.DropDownList("FamiliaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[4].Watermark, htmlAttributes: new { @class = "form-control inputModal", @required = "true", style = "text-transform: uppercase", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
            </div>
            <div class="col-sm-2">
                @Html.EditorFor(model => model.CantidadDefault, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Cantidad Default" } })
            </div>
        </div>*@
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}