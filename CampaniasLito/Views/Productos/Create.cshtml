@model CampaniasLito.Models.Producto

@{
    ViewBag.Title = "Nuevo Producto";
}

@using (Html.BeginForm("Create", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel">
        <div class="panel-heading" style="border-radius: 10px; background: #DF2530">
            <table>
                <tr>
                    <td class="col-xs-6">
                        <h2 class="responsivoUsuarioLabelFa" style="color: #fff">Nuevo</h2>
                    </td>
                    <td class=" col-xs-12"></td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="submit" class="botonF2 btn-danger" style="background-color: red" data-dismiss="modal">
                                <i class="fas fa-times-circle"></i>
                                @*SALIR*@
                            </button>
                        </div>
                    </td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="submit" class="botonF1 btn-success" style="background-color: green">
                                <i class="fas fa-check-circle"></i>
                                @*ACEPTAR*@
                            </button>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="panel-body">
            <div class="form-horizontal row responsivoUsuarioLabel">
                <div class="col-xs-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CompañiaId)
                    <div class="form-group">
                        <div class="col-xs-7 col-md-11">
                            @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("CategoriaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[4].Watermark, htmlAttributes: new { @class = "form-control inputModal", @required = "true", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-1 col-md-1">
                            @Html.ActionLink(" ", "Create", "Categorias", new { }, new { @class = "responsivoUsuarioLabel dialog-window-categoria btn btn-pilares fas fa-plus-circle", style = "border-radius:10px; margin-top: 30px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Artículo" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.CodigoBarras, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CodigoBarras, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Medida" } })
                            @Html.ValidationMessageFor(model => model.CodigoBarras, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Precio" } })
                            @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-xs-7 col-md-11">
                            @Html.LabelFor(model => model.ImpuestoId, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("ImpuestoId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[4].Watermark, htmlAttributes: new { @class = "form-control inputModal", @required = "true", @oninvalid = "setCustomValidity('Seleccionar un elemento de la lista')", @oninput = "setCustomValidity('')" })
                            @Html.ValidationMessageFor(model => model.ImpuestoId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-xs-1 col-md-1">
                            @Html.ActionLink(" ", "Create", "Impuestos", new { }, new { @class = "responsivoUsuarioLabel dialog-window-categoria btn btn-pilares fas fa-plus-circle", style = "border-radius:10px; margin-top: 30px" })
                        </div>
                    </div>

                    @*<div class="form-group">
        <div class="form-group">
            @Html.LabelFor(model => model.ImagenFile, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-4">
                <div class="file-input-new">
                    <div class="input-group" style="width:250px; color:#fff">
                        <div tabindex="500" class="form-control file-caption" style="height:36px; width: 175px; border-radius:10px 0 0 10px; background-color:#3B4757">
                            <div class="file-caption-name" id="NombreArchivo" style="color: white">
                            </div>
                        </div>
                        <div class="input-group-btn" style="height:auto">
                            <div tabindex="500" class="btn btn-pilares btn-file" style="border-radius:0 10px 10px 0">
                                <i class="fas fa-folder-open" style="font-size:12px"> Seleccionar Archivo...</i>
                                @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file", id = "files", accept = "image/*" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
                    @*@Html.LabelFor(model => model.ImagenFile, htmlAttributes: new { @class = "control-label col-xs-2 col-md-1" })
        <div class="col-md-6">
            <div class="input-group-btn" style="height:auto">
                <div tabindex="500" class="btn btn-pilares" style="border-radius:10px">
                    @Html.TextBoxFor(modelo => modelo.ImagenFile, new { type = "file", id = "files", accept = "image/*" })
                </div>
            </div>
        </div>
                </div>*@

                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Comentarios, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Comentarios, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @style = "text-transform:uppercase", placeholder = "Comentarios" } })
                            @Html.ValidationMessageFor(model => model.Comentarios, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/fileupload.js"></script>
}