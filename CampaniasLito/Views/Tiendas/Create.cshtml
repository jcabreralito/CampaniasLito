@model CampaniasLito.Models.Tienda

@{
    ViewBag.Title = "Agregar";
    Layout = null;
}

@using (Html.BeginForm("Create", "Tiendas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="panel mt-3">
        <div class="panel-heading" style="border-radius: 10px" id="panelH">
            <table>
                <tr>
                    <td class="col-xs-6">
                        <h2 class="responsivoUsuarioLabelFa" style="color: #fff">@ViewBag.Title</h2>
                    </td>
                    <td class=" col-xs-12"></td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="button" class="botonF2 btn-danger" style="background-color: red" data-dismiss="modal">
                                <i class="fas fa-times-circle"></i>
                            </button>
                        </div>
                    </td>
                    <td align="center" class="col-xs-1">
                        <div class="input-group">
                            <button type="submit" class="botonF1Modal btn-success" style="background-color: green">
                                <i class="fas fa-check-circle"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="panel-body">
            <div class="form-horizontal row responsivoUsuarioLabel">
                <div class="col-xs-12">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.CompañiaId)
                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.Clasificacion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Clasificación" } })
                            @Html.ValidationMessageFor(model => model.Clasificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.CCoFranquicia, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "C.C. o Franquicia" } })
                            @Html.ValidationMessageFor(model => model.CCoFranquicia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.Restaurante, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Restaurante" } })
                            @Html.ValidationMessageFor(model => model.Restaurante, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("RegionId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[6].Watermark, htmlAttributes: new { @class = "form-control", @required = "true", @style = "text-transform:uppercase" })
                            @Html.ValidationMessageFor(model => model.RegionId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("CiudadId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true", @style = "text-transform:uppercase" })
                            @Html.ValidationMessageFor(model => model.CiudadId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Direccion" } })
                            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @*@Html.DropDownListFor(model => model.NuevoNivelDePrecioId, (IEnumerable<SelectListItem>)ViewBag.Opciones)*@
                            @Html.DropDownList("Opciones", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true", @style = "text-transform:uppercase" })
                            @Html.ValidationMessageFor(model => model.NuevoNivelDePrecioId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("TipoId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.TipoId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Ensalada", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Ensalada, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Autoexpress", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Autoexpress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("MenuBackLigth", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.MenuBackLigth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("MPKeMartesBigKrunch", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.MPKeMartesBigKrunch, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("TerceraReceta", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.TerceraReceta, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Postres", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Postres, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("CopeteAERemodelado", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.CopeteAERemodelado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("CopeteAETradicional", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.CopeteAETradicional, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Delivery", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Delivery, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("WCMedidaEspecial60_8x85cm", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.WCMedidaEspecial60_8x85cm, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("PanelDeInnovacion", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.PanelDeInnovacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("BisquetMiel", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.BisquetMiel, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Elote", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Elote, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Hamburgesas", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Hamburgesas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("Arroz", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.Arroz, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("PET2Litros", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.PET2Litros, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("MenuDigital", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.MenuDigital, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("MedidaEspecialAutoexpress", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.MedidaEspecialAutoexpress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("MedidaEspecialPanelDeComplementos", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.MedidaEspecialPanelDeComplementos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.NumeroDeVentanas, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Direccion" } })
                            @Html.ValidationMessageFor(model => model.NumeroDeVentanas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("DisplayDeBurbuja", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.DisplayDeBurbuja, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("AreaDeJuegos", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.AreaDeJuegos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("NoMesaDeAreaDeJuegos", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.NoMesaDeAreaDeJuegos, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("NoMesaDeAreaComedor", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.NoMesaDeAreaComedor, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-12">
                            @Html.EditorFor(model => model.CantidadDePantallas, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @required = "true", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Direccion" } })
                            @Html.ValidationMessageFor(model => model.CantidadDePantallas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("AcomodoDeCajas", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.AcomodoDeCajas, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-10">
                            @Html.DropDownList("TipoDeCajaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control", @required = "true" })
                            @Html.ValidationMessageFor(model => model.TipoDeCajaId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@


                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var UrlM = '@Url.Action("GetCiudadesXRegion", "Generic")';
    </script>

}