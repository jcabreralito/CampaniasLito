@model CampaniasLito.Models.Tienda

@{
    ViewBag.Title = "Eliminar";
    Layout = null;
}
@using (Html.BeginForm("Delete", "Tiendas", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="panel mt-3">
        <div class="panel-heading">
            <table class="headingModal">
                <tr style="background-color: #DF2530 !important">
                    <td class="col-xs-6">
                        <h2 class="responsivoUsuarioLabelFa" style="color: #fff">@ViewBag.Title</h2>
                    </td>
                    <td class=" col-xs-12"></td>
                    <td align="right" class="col-xs-1">
                        <div class="input-group">
                            <button type="button" class="botonF2 btn-danger" style="background-color: red" data-dismiss="modal">
                                <i class="fas fa-times-circle"></i>
                            </button>
                        </div>
                    </td>
                    <td align="center" class="col-xs-1">
                        <div class="input-group">
                            <button type="submit" class="botonF1Modal btn-success" style="background-color: green">
                                <i class="fas fa-check-circle"></i>
                            </button>
                        </div>
                    </td>
                </tr>
            </table>
        </div>

        <div class="panel-body">
            <div class="form-horizontal row responsivoUsuarioLabel">
                <div class="col-xs-12">

                    <hr style="border: solid 2px black" />

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.Clasificacion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Clasificación" } })
                        </div>
                        <div class="col-md-1">
                            @Html.EditorFor(model => model.CCoFranquicia, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "C.C. o Franquicia" } })
                        </div>
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Restaurante, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Restaurante" } })
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownList("RegionId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                        <div class="col-md-2">
                            @Html.DropDownList("CiudadId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Direccion, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Direccion" } })
                        </div>
                    </div>

                    <hr style="border: solid 2px black" />

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.DropDownList("NuevoNivelDePrecioId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("TipoId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Ensalada, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Ensalada, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Autoexpress, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Autoexpress, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MenuBackLigth, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MenuBackLigth, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MPKeMartesBigKrunch, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MPKeMartesBigKrunch, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.TerceraReceta, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.TerceraReceta, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Postres, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Postres, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.CopeteAERemodelado, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.CopeteAERemodelado, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.CopeteAETradicional, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.CopeteAETradicional, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Delivery, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Delivery, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.WCMedidaEspecial60_8x85cm, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.WCMedidaEspecial60_8x85cm, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.PanelDeInnovacion, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.PanelDeInnovacion, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.BisquetMiel, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.BisquetMiel, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Elote, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Elote, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Hamburgesas, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Hamburgesas, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.Arroz, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.Arroz, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.PET2Litros, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.PET2Litros, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MenuDigital, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MenuDigital, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MedidasEspecialesMenu, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MedidasEspecialesMenu, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MedidaEspecialAutoexpress, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MedidaEspecialAutoexpress, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.MedidaEspecialPanelDeComplementos, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.MedidaEspecialPanelDeComplementos, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 10px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.NumeroDeVentanas, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "No. Ventanas" } })
                        </div>
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.DisplayDeBurbuja, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.DisplayDeBurbuja, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3 form-inline inputModal divFormCheck">
                            @Html.CheckBoxFor(model => model.AreaDeJuegos, htmlAttributes: new { @class = "form-check", @disabled = "disabled" })
                            @Html.LabelFor(model => model.AreaDeJuegos, htmlAttributes: new { style = "vertical-align: middle !important; font-size: 12px !important; margin-top: 4px" })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.NoMesaDeAreaDeJuegos, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "No. Mesas Área Juegos" } })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.NoMesaDeAreaComedor, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "No. Mesas Área Comedor" } })
                        </div>
                        <div class="col-md-3">
                            @Html.EditorFor(model => model.CantidadDePantallas, new { htmlAttributes = new { @class = "form-control responsivoUsuarioText inputModal", @disabled = "disabled", @oninvalid = "setCustomValidity('Este campo es obligatorio')", @oninput = "setCustomValidity('')", @style = "text-transform:uppercase", placeholder = "Pantallas" } })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.DropDownList("AcomodoDeCajas", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                        <div class="col-md-3">
                            @Html.DropDownList("TipoDeCajaId", null, ((IList<ModelMetadata>)ViewData.ModelMetadata.Properties)[0].Watermark, htmlAttributes: new { @class = "form-control inputModal", @disabled = "disabled", @style = "text-transform:uppercase" })
                        </div>
                    </div>


                    <hr style="border: solid 2px black" />

                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        var UrlM = '@Url.Action("GetCiudadesXRegion", "Generic")';
    </script>

}


































@*@model CampaniasLito.Models.Tienda

    @{
        ViewBag.Title = "Delete";
        Layout = null;
    }

    <h2>Delete</h2>

    <h3>Are you sure you want to delete this?</h3>
    <div>
        <h4>Tienda</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Clasificacion)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Clasificacion)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CCoFranquicia)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CCoFranquicia)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Restaurante)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Restaurante)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.RegionId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.RegionId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CiudadId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CiudadId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Direccion)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Direccion)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.NuevoNivelDePrecioId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NuevoNivelDePrecioId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TipoId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TipoId)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Ensalada)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Ensalada)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Autoexpress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Autoexpress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MenuBackLigth)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MenuBackLigth)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MPKeMartesBigKrunch)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MPKeMartesBigKrunch)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TerceraReceta)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TerceraReceta)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Postres)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Postres)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CopeteAERemodelado)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CopeteAERemodelado)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CopeteAETradicional)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CopeteAETradicional)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Delivery)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Delivery)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.WCMedidaEspecial60_8x85cm)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.WCMedidaEspecial60_8x85cm)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PanelDeInnovacion)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PanelDeInnovacion)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.BisquetMiel)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.BisquetMiel)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Elote)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Elote)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Hamburgesas)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Hamburgesas)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Arroz)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Arroz)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.PET2Litros)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.PET2Litros)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MenuDigital)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MenuDigital)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MedidasEspecialesMenu)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MedidasEspecialesMenu)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MedidaEspecialAutoexpress)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MedidaEspecialAutoexpress)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.MedidaEspecialPanelDeComplementos)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.MedidaEspecialPanelDeComplementos)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.NumeroDeVentanas)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NumeroDeVentanas)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.DisplayDeBurbuja)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.DisplayDeBurbuja)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AreaDeJuegos)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AreaDeJuegos)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.NoMesaDeAreaDeJuegos)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NoMesaDeAreaDeJuegos)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.NoMesaDeAreaComedor)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.NoMesaDeAreaComedor)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.CantidadDePantallas)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.CantidadDePantallas)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.AcomodoDeCajas)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.AcomodoDeCajas)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.TipoDeCajaId)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.TipoDeCajaId)
            </dd>

        </dl>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-actions no-color">
                <input type="submit" value="Delete" class="btn btn-default" /> |
                @Html.ActionLink("Back to List", "Index")
            </div>
        }
    </div>*@
